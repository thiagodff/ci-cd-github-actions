name: CI

# triggers do github action para falar que ira acionar a pipeline em quais eventos
on:
  push:
    branches: ['**']

# agora definiremos os stages
jobs:
  ci:
    runs-on: ubuntu-latest

    # conseguimos definir algumas informacoes para serem recuperadas posteriormente
    strategy:
      matrix:
        # cuidado para nao empolgar e gastar minutos (dinheiro) de forma desncessaria
        # ou acabar atrasando outras builds
        node-version: [12.x]

    steps:
      # precisamos utilizar uma action de checkout para conseguir-mos entrar no projeto
      # quando usamos esse actions/, podemos utilizar actions do proprio github
      - uses: actions/checkout@v2
      - name: Use Node.Js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - run: yarn lint
      - run: yarn test
      - run: yarn build

      # caso queira que o CD na vercel seja feito pelo github actions basta configurar
      # - name: Vercel Action
      #   uses: amondnet/vercel-action@v20.0.0
      #   with:
      #     vercel-token: asd
      #     vercel-project-id: asd
      #     vercel-org-id: asd

      # lembre-se: a propria Vercel faz todo o papel de cd
      # utilizar o github actions para isso somente ira gastar seus minutos
